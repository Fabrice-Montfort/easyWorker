<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright (c) 2014 Frédéric Thomas
  -
  - Licensed to the Apache Software Foundation (ASF) under one or more
  - contributor license agreements.  See the NOTICE file distributed with
  - this work for additional information regarding copyright ownership.
  - The ASF licenses this file to You under the Apache License, Version 2.0
  - (the "License"); you may not use this file except in compliance with
  - the License.  You may obtain a copy of the License at
  -
  -     http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
  -->

<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       windowComplete="windowCompleteHandler(event)"
                       width="400" height="450"
                       color="0xFFFFFF"
                       backgroundColor="0x000000">

    <fx:Script><![CDATA[
        import com.doublefx.as3.thread.Thread;
        import com.doublefx.as3.thread.api.IThread;
        import com.doublefx.as3.thread.event.ThreadResultEvent;

        import flash.concurrent.Mutex;

        import mx.events.AIREvent;

        import worker.BankAccount;
        import worker.WithdrawMoney;

        private function windowCompleteHandler(event:AIREvent):void {
            const bankAccount:BankAccount = new BankAccount();

            const sharedAccount:ByteArray = new ByteArray();
            sharedAccount.shareable = true;
            sharedAccount.writeObject(bankAccount);

            const mutex:Mutex = new Mutex();

            const alice:IThread = new Thread(WithdrawMoney, "Alice");
            alice.setSharedProperty("mutex", mutex);
            alice.setSharedProperty("sharedAccount", sharedAccount);
            alice.addEventListener(ThreadResultEvent.RESULT, alice_resultHandler);

            const bob:IThread = new Thread(WithdrawMoney, "Bob");
            bob.setSharedProperty("mutex", mutex);
            bob.setSharedProperty("sharedAccount", sharedAccount);
            bob.addEventListener(ThreadResultEvent.RESULT, bob_resultHandler);

            alice.start(200);
            bob.start(200);
        }

        private function alice_resultHandler(event:ThreadResultEvent):void {
            result.text += "Alice: " + event.result + "\n";
        }

        private function bob_resultHandler(event:ThreadResultEvent):void {
            result.text += "Bob: " + event.result + "\n";
        }
        ]]></fx:Script>

    <s:TextArea id="result" color="#000000"/>
</s:WindowedApplication>
